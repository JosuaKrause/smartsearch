# Stubs for pandas.io.formats.excel (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
# pylint: disable=unused-argument,multiple-statements,too-few-public-methods
from typing import Any, Optional


class ExcelCell:
    __fields__: Any = ...
    row: Any = ...
    col: Any = ...
    val: Any = ...
    style: Any = ...
    mergestart: Any = ...
    mergeend: Any = ...

    def __init__(
        self, row: Any, col: Any, val: Any, style: Optional[Any] = ...,
        mergestart: Optional[Any] = ...,
        mergeend: Optional[Any] = ...) -> None: ...


class CSSToExcelConverter:
    inherited: Any = ...

    def __init__(self, inherited: Optional[Any] = ...) -> None: ...

    compute_css: Any = ...

    def __call__(self, declarations_str: Any) -> Any: ...

    def build_xlstyle(self, props: Any) -> Any: ...

    VERTICAL_MAP: Any = ...

    def build_alignment(self, props: Any) -> Any: ...

    def build_border(self, props: Any) -> Any: ...

    def build_fill(self, props: Any) -> Any: ...

    BOLD_MAP: Any = ...
    ITALIC_MAP: Any = ...

    def build_font(self, props: Any) -> Any: ...

    NAMED_COLORS: Any = ...

    def color_to_excel(self, val: Any) -> Any: ...

    def build_number_format(self, props: Any) -> Any: ...


class ExcelFormatter:
    max_rows: Any = ...
    max_cols: Any = ...
    rowcounter: int = ...
    na_rep: Any = ...
    styler: Any = ...
    style_converter: Any = ...
    df: Any = ...
    columns: Any = ...
    float_format: Any = ...
    index: Any = ...
    index_label: Any = ...
    header: Any = ...
    merge_cells: Any = ...
    inf_rep: Any = ...

    def __init__(
        self, df: Any, na_rep: str = ..., float_format: Optional[Any] = ...,
        cols: Optional[Any] = ..., header: bool = ..., index: bool = ...,
        index_label: Optional[Any] = ..., merge_cells: bool = ...,
        inf_rep: str = ..., style_converter: Optional[Any] = ...) -> None: ...

    @property
    def header_style(self) -> Any: ...

    def get_formatted_cells(self) -> None: ...

    def write(
        self, writer: Any, sheet_name: str = ..., startrow: int = ...,
        startcol: int = ..., freeze_panes: Optional[Any] = ...,
        engine: Optional[Any] = ...) -> None: ...
